import arcpy
arcpy.env.overwriteOutput = True

capa = GDB = arcpy.GetParameterAsText(0)
capa=arcpy.SearchCursor(capa)
ciudad=arcpy.GetParameterAsText(1)
carpeta=arcpy.GetParameterAsText(2)

def nom_ugesp(abrev):
 if abrev == "BAHIA DE CARAQUEZ":
  return "BAHIA" 

 elif abrev == "SAN VICENTE":
  return "SAN_VICENTE"

 elif abrev == "VELASCO IBARRA (EL EMPALME)":
  return "EL_EMPALME"

 elif abrev == "FLAVIO ALFARO":
  return "FLAVIO_ALFARO"

 elif abrev == "SANTA ANA DE VUELTA LARGA":
  return "SANTA_ANA"

 elif abrev == "SAN JACINTO DE BUENA FE":
  return "BUENA_FE"

 elif abrev == "EL CARMEN":
  return "EL_CARMEN"

 elif abrev == "LA VICTORIA (LAS LAJAS)":
  return "LA_VICTORIA"

 elif abrev == "EL SALITRE (LAS RAMAS)":
  return "SALITRE"

 elif abrev == "SANTA LUCIA":
  return "SANTA_LUCIA"

 elif abrev == "GENERAL ANTONIO ELIZALDE (BUCAY)":
  return "BUCAY"

 elif abrev == "ELOY ALFARO (DURAN)":
  return "DURAN" 

 elif abrev == "EL TRIUNFO":
  return "EL_TRIUNFO" 

 elif abrev == "ISIDRO AYORA":
  return "ISIDRO_AYORA" 

 elif abrev == "ALFREDO BAQUERIZO MORENO (JUJAN)":
  return "JUJAN" 

 elif abrev == "LOMAS DE SARGENTILLO":
  return "L_SARGENTILLO" 

 elif abrev == "CORONEL MARCELINO MARIDUEÃ‘A":
  return "MAR_MARIDUENA" 

 elif abrev == "NARCISA DE JESUS (NOBOL)":
  return "NOBOL" 

 elif abrev == "PEDRO CARBO":
  return "PEDRO_CARBO" 

 elif abrev == "PUERTO LOPEZ":
  return "PUERTO_LOPEZ" 

 elif abrev == "SIMON BOLIVAR":
  return "SIMON_BOLIVAR"

 elif abrev == "SAN JACINTO DE YAGUACHI":
  return "YAGUACHI" 

 elif abrev == "LA LIBERTAD":
  return "LA_LIBERTAD" 

 elif abrev == "SIMON BOLIVAR":
  return "SIMON_BOLIVAR" 

 elif abrev == "GENERAL VILLAMIL (PLAYAS)":
  return "PLAYAS" 
 elif abrev == "SANTA ROSA":
  return "SANTA_ROSA" 
  
 elif abrev == "SAN MIGUEL":
  return "SAN_MIGUEL"
  
 elif abrev =="SAN MIGUEL DE LOS BANCOS":
  return "LOS_BANCOS"
  
 elif abrev =="PEDRO VICENTE MALDONADO":
  return "PV_MALDONADO"
  
 elif abrev =="PUERTO QUITO":
  return "PUERTO_QUITO"
  
 elif abrev =="LA CONCORDIA":
  return "LA_CONCORDIA"
  
 elif abrev =="ROSA ZARATE":
  return "ROSA_ZARATE"
  
 elif abrev =="SAN LORENZO":
  return "SAN_LORENZO"
  
 elif abrev =="EL ANGEL":
  return "EL_ANGEL"
  
 elif abrev =="SAN GABRIEL":
  return "SAN_GABRIEL"
  
 elif abrev =="LA BONITA":
  return "LA_BONITA"
  
 elif abrev =="EL DORADO DE CASCALES":
  return "EL_DORADO"
  
 elif abrev =="PUERTO EL CARMEN DE PUTUMAYO":
  return "PUTUMAYO"
  
 elif abrev =="LA JOYA DE LOS SACHAS":
  return "JOYA_SACHAS"
  
 elif abrev =="NUEVO ROCAFUERTE":
  return "NUEVO_ROCAFUERTE"
  
 elif abrev =="CARLOS JULIO AROSEMENA TOLA":
  return "CJ_AROSEMENA"
  
 elif abrev =="EL CHACO":
  return "EL_CHACO"
  
 else:
  return abrev

path1= arcpy.os.path.join(carpeta,"stl_"+nom_ugesp(ciudad).lower()+"_geomorfologia.sld")
file = open(path1, "w")

file.write("<?xml version='1.0' encoding='utf-8'?>\n")
file.write("<StyledLayerDescriptor xmlns='http://www.opengis.net/sld' xmlns:ogc='http://www.opengis.net/ogc'\n")
file.write("xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'\n")
file.write("version='1.0.0' xsi:schemaLocation='http://www.opengis.net/sld StyledLayerDescriptor.xsd'>\n")
file.write("  <!--Generated by GeoCat Bridge for QGIS 4.3.2 (based on bridgestyle 0.1)-->\n")
file.write("  <NamedLayer>\n")
file.write("    <Name>v_geomorfologia_a</Name>\n")
file.write("    <UserStyle>\n")
file.write("      <Title>v_geomorfologia_a</Title>\n")
file.write("      <FeatureTypeStyle>\n")
file.write("")
for i in capa:
 
 if (i.getValue("tds") != " ")== True:
    file.write("        <Rule>\n")
    file.write("          <Name>"+i.getValue("tds").encode("UTF-8")+"</Name>\n")
    file.write("          <ogc:Filter>\n")
    file.write("            <ogc:PropertyIsEqualTo>\n")
    file.write("              <ogc:PropertyName>tds</ogc:PropertyName>\n")
    file.write("              <ogc:Literal>"+i.getValue("tds").encode("UTF-8")+"</ogc:Literal>\n")
    file.write("            </ogc:PropertyIsEqualTo>\n")
    file.write("          </ogc:Filter>\n")
    file.write("          <PolygonSymbolizer>\n")
    file.write("            <Fill>\n")
    file.write("              <GraphicFill>\n")
    file.write("                <Graphic>\n")
    file.write("                  <ExternalGraphic>\n")
    file.write("                    <OnlineResource\n")
    file.write("                                    xlink:type='simple'\n")
    file.write(i.getValue("img_tds").encode("UTF-8")+"\n")
    file.write("                    <CssParameter name='fill-opacity'>0.5</CssParameter>\n")    
    file.write("                    <Format>image/png</Format>\n")
    file.write("                  </ExternalGraphic>\n")
    file.write("                  <Size>93</Size>\n")
    file.write("                </Graphic>\n")
    file.write("              </GraphicFill>\n")
    file.write("            </Fill>\n")
    file.write("          </PolygonSymbolizer>\n")
    file.write("        </Rule>\n")
     
 if (i.getValue("nug") != " ") == True:        
    file.write("        <Rule>\n")
    file.write("          <Name>"+i.getValue("nug").encode("UTF-8")+"</Name>\n")
    file.write("          <ogc:Filter>\n")
    file.write("            <ogc:PropertyIsEqualTo>\n")
    file.write("              <ogc:PropertyName>nug</ogc:PropertyName>\n")
    file.write("              <ogc:Literal>"+i.getValue("nug").encode("UTF-8")+"</ogc:Literal>\n")
 
    file.write("            </ogc:PropertyIsEqualTo>\n")
    file.write("          </ogc:Filter>\n") 
    file.write("          <PolygonSymbolizer>\n")
    file.write("            <Fill>\n")
    file.write("              <GraphicFill>\n")
    file.write("                <Graphic>\n")
    file.write("                  <ExternalGraphic>\n")
    file.write("                    <OnlineResource\n")
    file.write("                                    xlink:type='simple'\n")
    file.write(i.getValue("img_nug").encode("UTF-8")+"\n") 
    file.write("                    <CssParameter name='fill-opacity'>0.5</CssParameter>\n")        
    file.write("                    <Format>image/png</Format>\n")
    file.write("                  </ExternalGraphic>\n")
    file.write("                  <Size>93</Size>\n")
    file.write("                </Graphic>\n")
    file.write("              </GraphicFill>\n")
    file.write("            </Fill>\n")
    file.write("          </PolygonSymbolizer>\n")
    file.write("        </Rule> \n") 

 if (i.getValue("dvq") != " ") == True:        
    file.write("        <Rule>\n")
    file.write("          <Name>"+i.getValue("dvq").encode("UTF-8")+"</Name>\n")
    file.write("          <ogc:Filter>\n")
    file.write("            <ogc:PropertyIsEqualTo>\n")
    file.write("              <ogc:PropertyName>dvq</ogc:PropertyName>\n")
    file.write("              <ogc:Literal>"+i.getValue("dvq").encode("UTF-8")+"</ogc:Literal>\n")
    file.write("            </ogc:PropertyIsEqualTo>\n")
    file.write("          </ogc:Filter>\n") 
    file.write("          <PolygonSymbolizer>\n")
    file.write("            <Fill>\n")
    file.write("              <GraphicFill>\n")
    file.write("                <Graphic>\n")
    file.write("                  <ExternalGraphic>\n")
    file.write("                    <OnlineResource\n")
    file.write("                                    xlink:type='simple'\n")
    file.write(i.getValue("F2").encode("UTF-8")+"\n")      
    file.write("                    <Format>image/png</Format>\n")
    file.write("                  </ExternalGraphic>\n")
    file.write("                  <Size>93</Size>\n")
    file.write("                </Graphic>\n")
    file.write("              </GraphicFill>\n")
    file.write("            </Fill>\n")
    file.write("          </PolygonSymbolizer>\n")
    file.write("        </Rule> \n")     

 if (i.getValue("geof") != " ") == True: 
    if i.getValue("rgra") == "S-A":
     file.write("        <Rule>\n")
     file.write("          <Name>"+i.getValue("geof").encode('latin1')+"</Name>\n")
     file.write("          <ogc:Filter>\n")
     file.write("            <ogc:PropertyIsEqualTo>\n")
     file.write("              <ogc:PropertyName>rgra</ogc:PropertyName>\n")
     file.write("              <ogc:Literal>S-A</ogc:Literal>\n")
     file.write("            </ogc:PropertyIsEqualTo>\n")
     file.write("          </ogc:Filter>\n")
     file.write("          <PolygonSymbolizer>\n")  
     file.write("            <Fill>\n") 
     file.write("              <CssParameter name='fill'>#cccccc</CssParameter>\n") 
     file.write("              <CssParameter name='fill-opacity'>1.0</CssParameter>\n") 
     file.write("            </Fill>\n") 
     file.write("            <Stroke>\n") 
     file.write("              <CssParameter name='stroke'>#6e6e6e</CssParameter>\n") 
     file.write("              <CssParameter name='stroke-width'>1</CssParameter>\n") 
     file.write("              <CssParameter name='stroke-opacity'>1.0</CssParameter>\n") 
     file.write("            </Stroke>\n") 
     file.write("          </PolygonSymbolizer>\n")    
     file.write("          <PolygonSymbolizer>\n")
     file.write("            <Fill>\n")
     file.write("              <GraphicFill>\n")
     file.write("                <Graphic>\n")
     file.write("                  <Mark>\n")
     file.write("                    <WellKnownName>shape://slash</WellKnownName>\n")
     file.write("                    <Fill>\n")
     file.write("                      <CssParameter name='fill'>#6f6f6f</CssParameter>\n")
     file.write("                      <CssParameter name='fill-opacity'>1</CssParameter>\n")
     file.write("                    </Fill>\n")
     file.write("                    <Stroke>\n")
     file.write("                      <CssParameter name='stroke'>#6f6f6f</CssParameter>\n")
     file.write("                      <CssParameter name='stroke-width'>0.5</CssParameter>\n")
     file.write("                      <CssParameter name='stroke-opacity'>1.0</CssParameter>\n")
     file.write("                    </Stroke>\n")
     file.write("                  </Mark>\n")
     file.write("                  <Opacity/>\n")
     file.write("                  <Size>7</Size>\n")
     file.write("                  <Rotation>0</Rotation>\n")
     file.write("                </Graphic>\n")
     file.write("              </GraphicFill>\n")
     file.write("            </Fill>\n")
     file.write("          </PolygonSymbolizer>\n")
     file.write("          <LineSymbolizer>\n")
     file.write("            <Stroke>\n")
     file.write("              <CssParameter name='stroke'>#6f6f6f</CssParameter>\n")
     file.write("              <CssParameter name='stroke-width'>1.6428571428571428</CssParameter>\n")
     file.write("              <CssParameter name='stroke-opacity'>1.0</CssParameter>\n")
     file.write("              <CssParameter name='stroke-linejoin'>bevel</CssParameter>\n")
     file.write("              <CssParameter name='stroke-linecap'>square</CssParameter>\n")
     file.write("            </Stroke>\n")
     file.write("          </LineSymbolizer>\n")
     file.write("        </Rule>\n")
    else:
     file.write("        <Rule>\n")
     file.write("          <Name>"+i.getValue("geof").encode('latin1')+"</Name>\n")
     file.write("          <ogc:Filter>\n")
     file.write("            <ogc:PropertyIsEqualTo>\n")       
     file.write("              <ogc:PropertyName>rgra</ogc:PropertyName>\n")
     file.write("              <ogc:Literal>"+i.getValue("rgra")+"</ogc:Literal>\n")
     file.write("            </ogc:PropertyIsEqualTo>\n")
     file.write("          </ogc:Filter>\n")
     file.write("          <PolygonSymbolizer>\n")
     file.write("            <Fill>\n")
     file.write(i.getValue("color")+"\n")
     file.write("              <CssParameter name='fill-opacity'>1</CssParameter>\n")
     file.write("            </Fill>\n")
     file.write("            <Stroke>\n")
     file.write("              <CssParameter name='stroke'>#6f6f6f</CssParameter>\n")
     file.write("              <CssParameter name='stroke-width'>0.5</CssParameter>\n")
     file.write("              <CssParameter name='stroke-opacity'>1</CssParameter>\n")
     file.write("            </Stroke>\n")
     file.write("          </PolygonSymbolizer>\n")
     file.write("        </Rule>\n")

file.write("        <Rule>\n")
file.write("          <TextSymbolizer>\n")
file.write("            <Label>\n")
file.write("              <ogc:PropertyName>etiq</ogc:PropertyName>\n")
file.write("            </Label>\n")
file.write("          </TextSymbolizer>\n")
file.write("        </Rule>\n")
file.write("      </FeatureTypeStyle>\n")
file.write("    </UserStyle>\n")
file.write("  </NamedLayer>\n")
file.write("</StyledLayerDescriptor>\n")
file.write("")
file.close()
